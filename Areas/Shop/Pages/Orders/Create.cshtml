@page
@model VinylShop.Areas.Shop.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è";
}

<link rel="stylesheet" href="~/css/order.css" />

@await Html.PartialAsync("_Banner", (string)null)

<div class="order-container">
    <h1 class="order-title">–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>

    <div id="cart-items" class="cart-table"></div>

    <div class="order-summary">
        <div class="summary-line total">
            <span class="label">–†–∞–∑–æ–º:</span>
            <span class="value" id="final-sum">0 –≥—Ä–Ω.</span>
        </div>
    </div>

    <form method="post" class="checkout-form" id="orderForm">
        <input type="hidden" name="CartJson" id="CartJsonInput" />
        <input type="hidden" name="BuyerEmail" id="BuyerEmailInput" />
        <input type="hidden" name="Phone" id="PhoneInput" />

        @if (!User.Identity.IsAuthenticated)
        {
            <input type="text" name="FullName" placeholder="–ü–Ü–ë" required />
            <input type="tel" name="Phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" required />
            <input type="email" name="BuyerEmail" placeholder="E-mail" required />
        }

        <input type="text" name="City" placeholder="–ú—ñ—Å—Ç–æ" required />
        <input type="text" name="Address" placeholder="–ê–¥—Ä–µ—Å–∞" required />
        <textarea name="Comment" placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"></textarea>

        <fieldset>
            <legend>–°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏</legend>
            <label><input type="radio" name="PaymentMethod" value="–ì–æ—Ç—ñ–≤–∫–∞" checked /> –ì–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫</label>
            <label><input type="radio" name="PaymentMethod" value="–ö–∞—Ä—Ç–∞" /> –ë–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∞ –æ–ø–ª–∞—Ç–∞</label>
        </fieldset>

        <div class="order-footer">
            <button type="submit" class="btn btn-success full-width">–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</button>
        </div>
    </form>
</div>

<script>
    const buyerEmail = "@(User.Identity.IsAuthenticated? User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value : "")";
    const userPhone = "@(User.Identity.IsAuthenticated? Model.Phone: "")";

    document.addEventListener('DOMContentLoaded', () => {
        const cartContainer = document.getElementById('cart-items');
        const totalElement = document.getElementById('final-sum');
        const orderForm = document.getElementById('orderForm');

        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        function updateCartDisplay() {
            cartContainer.innerHTML = '';
            let totalSum = 0;

            cart.forEach((item, index) => {
                const subtotal = (item.qty * item.price).toFixed(2);
                totalSum += parseFloat(subtotal);

                const itemDiv = document.createElement('div');
                itemDiv.classList.add('cart-item');
                itemDiv.innerHTML = `
                    <img src="${item.image}" alt="${item.title}">
                    <div>
                        <a class="cart-item-title" href="/Shop/Albums/Details/${item.id}">${item.artist} - ${item.title}</a>
                        <div class="cart-item-controls">
                            <div class="quantity-control">
                                <button class="btn-qty minus" data-index="${index}">-</button>
                                <span class="item-qty">${item.qty}</span>
                                <button class="btn-qty plus" data-index="${index}">+</button>
                            </div>
                        </div>
                    </div>
                    <div class="cart-item-price">${subtotal} –≥—Ä–Ω.</div>
                    <button class="btn-remove" data-index="${index}">üóëÔ∏è</button>
                `;
                cartContainer.appendChild(itemDiv);
            });

            totalElement.textContent = `${totalSum.toFixed(2)} –≥—Ä–Ω.`;
        }

        if (cart.length > 0) {
            updateCartDisplay();
        } else {
            cartContainer.innerHTML = '<p>–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>';
            totalElement.textContent = '0 –≥—Ä–Ω.';
        }

        cartContainer.addEventListener('click', (e) => {
            const index = parseInt(e.target.dataset.index, 10);
            if (e.target.classList.contains('btn-qty')) {
                if (e.target.classList.contains('plus')) {
                    cart[index].qty++;
                } else if (e.target.classList.contains('minus') && cart[index].qty > 1) {
                    cart[index].qty--;
                }
                localStorage.setItem('cart', JSON.stringify(cart));
                updateCartDisplay();
            }

            if (e.target.classList.contains('btn-remove')) {
                cart.splice(index, 1);
                localStorage.setItem('cart', JSON.stringify(cart));
                updateCartDisplay();
            }
        });

        orderForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (cart.length === 0) {
                alert('–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!');
                return;
            }

            document.getElementById('CartJsonInput').value = JSON.stringify(cart);
            if (buyerEmail) document.getElementById('BuyerEmailInput').value = buyerEmail;
            if (userPhone) document.getElementById('PhoneInput').value = userPhone;

            orderForm.submit();
            localStorage.removeItem('cart'); // –û—á–∏—â–∞—î–º–æ –∫–æ—à–∏–∫ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —Å–∞–±–º—ñ—Ç—É
        });
    });
</script>
